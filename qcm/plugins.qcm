/*
-----BEGIN QCMOD-----
name: Psi Plugin support
-----END QCMOD-----
*/

//----------------------------------------------------------------------------
// qc_plugins
//----------------------------------------------------------------------------
class qc_plugins : public ConfObj {
public:
    qc_plugins(Conf *c) : ConfObj(c) {}
    QString name() const { return "Psi Plugin support"; }
    QString shortname() const { return "plugins"; }
    bool    exec()
    {
        QFileInfo fi(qc_getenv("QC_COMMAND"));
        QString   sourceDir = fi.absolutePath();

        conf->addDefine("PSI_PLUGINS");

        // Finish
        conf->addExtra("CONFIG += psi_plugins");

        QHash<QString, QString> vars;
#ifdef Q_OS_WIN
        vars["plugins_dir"] = "";
        vars["data_dir"]    = "";
        vars["include_dir"] = "";
#else
        vars["plugins_dir"] = conf->getenv("LIBDIR") + "/" + qc_psi_dir_name + "/plugins";
        vars["data_dir"]    = conf->getenv("DATADIR") + "/" + qc_psi_dir_name;
        vars["plugins_include_dir"] = conf->getenv("PREFIX") + "/include/" + qc_psi_dir_name + "/plugins";
#endif
        QStringList psiFeatures;
        if (!qc_webkit_type.isEmpty()) {
            psiFeatures << qc_webkit_type;
        }
        vars["features"] = psiFeatures.join(" ");
        psiGenerateFile(sourceDir + "/pluginsconf.pri.in", "pluginsconf-dist.pri", vars);

        return true;
    }
};
